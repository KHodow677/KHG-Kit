cmake_minimum_required(VERSION 3.5)

project(khg_net)

include(CheckFunctionExists)
include(CheckStructHasMember)
include(CheckTypeSize)
check_function_exists("fcntl" HAS_FCNTL)
check_function_exists("poll" HAS_POLL)
check_function_exists("getaddrinfo" HAS_GETADDRINFO)
check_function_exists("getnameinfo" HAS_GETNAMEINFO)
check_function_exists("gethostbyname_r" HAS_GETHOSTBYNAME_R)
check_function_exists("gethostbyaddr_r" HAS_GETHOSTBYADDR_R)
check_function_exists("inet_pton" HAS_INET_PTON)
check_function_exists("inet_ntop" HAS_INET_NTOP)
check_struct_has_member("struct msghdr" "msg_flags" "sys/types.h;sys/socket.h" HAS_MSGHDR_FLAGS)
set(CMAKE_EXTRA_INCLUDE_FILES "sys/types.h" "sys/socket.h")
check_type_size("socklen_t" HAS_SOCKLEN_T BUILTIN_TYPES_ONLY)
unset(CMAKE_EXTRA_INCLUDE_FILES)
if(MSVC)
	add_definitions(-W3)
else()
  add_definitions(-Wno-error)
endif()

if(HAS_FCNTL)
  add_definitions(-DHAS_FCNTL=1)
endif()
if(HAS_POLL)
  add_definitions(-DHAS_POLL=1)
endif()
if(HAS_GETNAMEINFO)
  add_definitions(-DHAS_GETNAMEINFO=1)
endif()
if(HAS_GETADDRINFO)
  add_definitions(-DHAS_GETADDRINFO=1)
endif()
if(HAS_GETHOSTBYNAME_R)
  add_definitions(-DHAS_GETHOSTBYNAME_R=1)
endif()
if(HAS_GETHOSTBYADDR_R)
  add_definitions(-DHAS_GETHOSTBYADDR_R=1)
endif()
if(HAS_INET_PTON)
  add_definitions(-DHAS_INET_PTON=1)
endif()
if(HAS_INET_NTOP)
  add_definitions(-DHAS_INET_NTOP=1)
endif()
if(HAS_MSGHDR_FLAGS)
  add_definitions(-DHAS_MSGHDR_FLAGS=1)
endif()
if(HAS_SOCKLEN_T)
  add_definitions(-DHAS_SOCKLEN_T=1)
endif()

add_library(khg_net)
file(GLOB_RECURSE sources "src/*.c")
target_sources(khg_net PRIVATE "${sources}")
target_include_directories(khg_net PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include")

if (WIN32)
  target_link_libraries(khg_net PUBLIC winmm ws2_32 khg_utl)
else ()
  target_link_libraries(khg_net PUBLIC khg_utl)
endif()
