#pragma once

#if !defined(_WIN32) || !defined(_WIN64)
#include <errno.h>
#endif

typedef enum stcp_error {
  TCP_NO_ERROR            = 0,
#if defined(_WIN32) || defined(_WIN64)
  TCP_EINTR = 10004,
  TCP_EBADF = 10009,
  TCP_EACCES = 10013,
  TCP_EFAULT = 10014,
  TCP_EINVAL = 10022,
  TCP_EMFILE = 10024,
  TCP_EWOULDBLOCK  = 10035,
  TCP_EINPROGRESS  = 10036,
  TCP_EALREADY = 10037,
  TCP_ENOTSOCK = 10038,
  TCP_EDESTADDRREQ = 10039,
  TCP_EMSGSIZE = 10040,
  TCP_EPROTOTYPE = 10041,
  TCP_ENOPROTOOPT  = 10042,
  TCP_EPROTONOSUPPORT  = 10043,
  TCP_ESOCKTNOSUPPORT  = 10044,
  TCP_EOPNOTSUPP = 10045,
  TCP_EPFNOSUPPORT = 10046,
  TCP_EAFNOSUPPORT = 10047,
  TCP_EADDRINUSE = 10048,
  TCP_EADDRNOTAVAIL  = 10049,
  TCP_ENETDOWN = 10050,
  TCP_ENETUNREACH  = 10051,
  TCP_ENETRESET  = 10052,
  TCP_ECONNABORTED = 10053,
  TCP_ECONNRESET = 10054,
  TCP_ENOBUFS  = 10055,
  TCP_EISCONN  = 10056,
  TCP_ENOTCONN = 10057,
  TCP_ESHUTDOWN  = 10058,
  TCP_ETOOMANYREFS = 10059,
  TCP_ETIMEDOUT  = 10060,
  TCP_ECONNREFUSED = 10061,
  TCP_ELOOP  = 10062,
  TCP_ENAMETOOLONG = 10063,
  TCP_EHOSTDOWN  = 10064,
  TCP_EHOSTUNREACH = 10065,
  TCP_ENOTEMPTY  = 10066,
  TCP_EPROCLIM = 10067,
  TCP_EUSERS = 10068,
  TCP_EDQUOT = 10069,
  TCP_ESTALE = 10070,
  TCP_EREMOTE  = 10071,
#else
  TCP_EINTR = EINTR,
  TCP_EBADF = EBADF,
  TCP_EACCES = EACCES,
  TCP_EFAULT = EFAULT,
  TCP_EINVAL = EINVAL,
  TCP_EMFILE = EMFILE,
  TCP_EWOULDBLOCK  = EWOULDBLOCK,
  TCP_EINPROGRESS  = EINPROGRESS,
  TCP_EALREADY = EALREADY,
  TCP_ENOTSOCK = ENOTSOCK,
  TCP_EDESTADDRREQ = EDESTADDRREQ,
  TCP_EMSGSIZE = EMSGSIZE,
  TCP_EPROTOTYPE = EPROTOTYPE,
  TCP_ENOPROTOOPT  = ENOPROTOOPT,
  TCP_EPROTONOSUPPORT  = EPROTONOSUPPORT,
  TCP_ESOCKTNOSUPPORT  = ESOCKTNOSUPPORT,
  TCP_EOPNOTSUPP = EOPNOTSUPP,
  TCP_EPFNOSUPPORT = EPFNOSUPPORT,
  TCP_EAFNOSUPPORT = EAFNOSUPPORT,
  TCP_EADDRINUSE = EADDRINUSE,
  TCP_EADDRNOTAVAIL  = EADDRNOTAVAIL,
  TCP_ENETDOWN = ENETDOWN,
  TCP_ENETUNREACH  = ENETUNREACH,
  TCP_ENETRESET  = ENETRESET,
  TCP_ECONNABORTED = ECONNABORTED,
  TCP_ECONNRESET = ECONNRESET,
  TCP_ENOBUFS = ENOBUFS,
  TCP_EISCONN = EISCONN,
  TCP_ENOTCONN = ENOTCONN,
  TCP_ESHUTDOWN  = ESHUTDOWN,
  TCP_ETOOMANYREFS = ETOOMANYREFS,
  TCP_ETIMEDOUT  = ETIMEDOUT,
  TCP_ECONNREFUSED = ECONNREFUSED,
  TCP_ELOOP = ELOOP,
  TCP_ENAMETOOLONG = ENAMETOOLONG,
  TCP_EHOSTDOWN  = EHOSTDOWN,
  TCP_EHOSTUNREACH = EHOSTUNREACH,
  TCP_ENOTEMPTY = ENOTEMPTY,
  TCP_EPROCLIM = 83,
  TCP_EUSERS = EUSERS,
  TCP_EDQUOT = EDQUOT,
  TCP_ESTALE = ESTALE,
  TCP_EREMOTE = EREMOTE,
#endif
} tcp_error;

typedef void (*tcp_error_callback_fn)(tcp_error, void *);

void tcp_set_error_callback(tcp_error_callback_fn error_callback, void *user_data);
tcp_error tcp_get_last_error(void);

void tcp_raise_error(tcp_error err);
void tcp_raise_ssl_error(int err);

const char *tcp_error_to_string(tcp_error err);
void tcp_print_error(tcp_error err);

void tcp_fail(tcp_error err, const char *file, int line);
#define TCP_FAIL(err) tcp_fail(err, __FILE__, __LINE__)
#define TCP_FAIL_LAST_ERROR() tcp_fail(tcp_get_last_error(), __FILE__, __LINE__)

